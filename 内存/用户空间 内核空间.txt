参见：
linux内核空间和用户空间详解 - zhangskd的专栏 - CSDN博客
	http://blog.csdn.net/zhangskd/article/details/6956638
linux 用户空间与内核空间——高端内存详解 - Lawrence.Lau - 博客园
	http://www.cnblogs.com/onlyforcloud/articles/4466454.html
Linux strace命令 - ggjucheng - 博客园
	https://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316692.html

在32位linux中，虚拟空间为4GB（2^32），其中高位的1GB供内核使用（内核空间），3GB供各进程使用（用户空间）

1个进程 = 用户空间 + 内核空间
用户空间：存储着自身程序的 代码和数据
	进程B 不能访问 进程A的用户空间
内核空间：存储着内核的 代码和数据
	不同的进程可以访问 该内核空间

当用户进程1要访问系统资源（如：文件，Socket等），它是没有权限的（只有内核才有权访问系统资源）
则用户 调用 内核提供的系统方法 来访问这些系统资源
至此，进程1处于 内核态
	可以通过strace命令来查看：进程所进行的 系统调用的情况（哪些系统调用，用了多久）
		参见：Linux strace命令 - ggjucheng - 博客园
	当进程执行自身程序的代码时，称 进程处于 用户态
	当进程被中断程序（由硬件触发信号，导致内核调用中断处理程序）所中断时，进程处于 内核态
在该过程中
	需要向内核传递 变量
	而内核在执行的过程中，也需要为用户程序保存一些变量
